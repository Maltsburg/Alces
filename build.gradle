plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.0'
    id 'org.jetbrains.kotlin.jvm' version '1.8.10'
}

group = project.property('group')
version = project.property('version')

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'jitpack'
        url = 'https://jitpack.io/'
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    compileOnly 'io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "net.kyori:adventure-text-serializer-gson:4.13.1"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [group: project.property('group'), name: project.property('modulename'), version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    destinationDirectory = file('testserver/plugins')
    archiveBaseName.set(project.property('modulename'))
    archiveClassifier.set('')
//    classifier = ''
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
